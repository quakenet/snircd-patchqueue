# HG changeset patch
# Parent 5da5765b8c23f11f0e2fc838b2646cc779b8d42f

diff -r 5da5765b8c23 include/client.h
--- a/include/client.h	Sat Jul 20 16:31:52 2013 +0200
+++ b/include/client.h	Sat Jul 20 16:52:59 2013 +0200
@@ -90,7 +90,7 @@
 #define FlagClr(set,flag) ((set)->bits[FLAGSET_INDEX(flag)] &= ~FLAGSET_MASK(flag))
 
 /** String containing valid user modes, in no particular order. */
-#define infousermodes "dioswkgxRXInPq"
+#define infousermodes "dioswkgxRXInPqQ"
 
 /** Character to indicate no oper name available */
 #define NOOPERNAMECHARACTER '-'
@@ -186,6 +186,10 @@
     FLAG_XTRAOP,                    /**< oper has special powers */
     FLAG_COMMONCHANSONLY,           /**< SNIRCD_q: hide privmsgs/notices if in no
 					 common channels (with +ok exceptions) */
+    FLAG_COMMONCHANSONLY_RESTRICTED,/**< SNIRCD_Q: don't let this user send
+					 privmsgs/notices to users they're not
+					 sharing any channels with (with +k
+					 exceptions */
 
     FLAG_LAST_FLAG,                 /**< number of flags */
     FLAG_LOCAL_UMODES = FLAG_LOCOP, /**< First local mode flag */
@@ -620,6 +624,8 @@
 #define IsSendOperName(x)         HasFlag(x, FLAG_OPERNAME)
 /** Return non-zero if the client has set mode +q (common chans only). */
 #define IsCommonChansOnly(x)    HasFlag(x, FLAG_COMMONCHANSONLY)
+/** Return non-zero if the client has set mode +Q (common chans restricted). */
+#define IsCommonChansOnlyRestricted(x) HasFlag(x, FLAG_COMMONCHANSONLY_RESTRICTED)
 
 /** Return non-zero if the client has operator or server privileges. */
 #define IsPrivileged(x)         (IsAnOper(x) || IsServer(x))
@@ -687,6 +693,8 @@
 #define SetParanoid(x)          SetFlag(x, FLAG_PARANOID)
 /** Mark a client as having mode +q (common chans only). */
 #define SetCommonChansOnly(x)   SetFlag(x, FLAG_COMMONCHANSONLY)
+/** Mark a client as having mode +Q (common chans restricted). */
+#define SetCommonChansOnlyRestricted(x) SetFlag(x, FLAG_COMMONCHANSONLY_RESTRICTED)
 
 /** Return non-zero if \a sptr sees \a acptr as an operator. */
 #define SeeOper(sptr,acptr) (IsAnOper(acptr) && (HasPriv(acptr, PRIV_DISPLAY) \
@@ -736,6 +744,8 @@
 #define ClearParanoid(x)        ClrFlag(x, FLAG_PARANOID)
 /** Remove mode +q (common chans only) from a client */
 #define ClearCommonChansOnly(x) ClrFlag(x, FLAG_COMMONCHANSONLY)
+/** Remove mode +Q (common chans restricted) from a client */
+#define ClearCommonChansOnlyRestricted(x) ClrFlag(x, FLAG_COMMONCHANSONLY_RESTRICTED)
 
 /* free flags */
 #define FREEFLAG_SOCKET	0x0001	/**< socket needs to be freed */
diff -r 5da5765b8c23 ircd/ircd_relay.c
--- a/ircd/ircd_relay.c	Sat Jul 20 16:31:52 2013 +0200
+++ b/ircd/ircd_relay.c	Sat Jul 20 16:52:59 2013 +0200
@@ -305,7 +305,9 @@
     *--host = '%';
 
   /* slug: same applies here, since only opers can be +k */
-  if (IsCommonChansOnly(acptr) && !IsXtraOp(sptr) && !common_chan_count(acptr, sptr, 1))
+  if (((IsCommonChansOnly(acptr) && !IsXtraOp(sptr)) || (IsCommonChansOnlyRestricted(sptr) &&
+      !IsXtraOp(sptr) && !IsChannelService(acptr) && !IsService(cli_user(acptr)->server))) &&
+      !common_chan_count(acptr, sptr, 1))
     return;
 
   if (!(is_silenced(sptr, acptr)))
@@ -357,7 +359,9 @@
   if (host)
     *--host = '%';
 
-  if (IsCommonChansOnly(acptr) && !IsXtraOp(sptr) && !common_chan_count(acptr, sptr, 1))
+  if (((IsCommonChansOnly(acptr) && !IsXtraOp(sptr)) || (IsCommonChansOnlyRestricted(sptr) &&
+      !IsXtraOp(sptr) && !IsChannelService(acptr) && !IsService(cli_user(acptr)->server))) &&
+      !common_chan_count(acptr, sptr, 1))
     return;
 
   if (!(is_silenced(sptr, acptr)))
@@ -399,7 +403,9 @@
     return;
   }
 
-  if (IsCommonChansOnly(acptr) && !IsXtraOp(sptr) && !common_chan_count(acptr, sptr, 1)) {
+  if (((IsCommonChansOnly(acptr) && !IsXtraOp(sptr)) || (IsCommonChansOnlyRestricted(sptr) &&
+      !IsXtraOp(sptr) && !IsChannelService(acptr) && !IsService(cli_user(acptr)->server))) &&
+      !common_chan_count(acptr, sptr, 1)) {
     send_reply(sptr, ERR_COMMONCHANSONLY, cli_name(acptr));
     return;
   }
@@ -448,7 +454,9 @@
   if (IsAccountOnly(acptr) && !IsAccount(sptr) && !IsOper(sptr))
     return;
 
-  if (IsCommonChansOnly(acptr) && !IsXtraOp(sptr) && !common_chan_count(acptr, sptr, 1))
+  if (((IsCommonChansOnly(acptr) && !IsXtraOp(sptr)) || (IsCommonChansOnlyRestricted(sptr) &&
+      !IsXtraOp(sptr) && !IsChannelService(acptr) && !IsService(cli_user(acptr)->server))) &&
+      !common_chan_count(acptr, sptr, 1))
     return;
 
   /*
diff -r 5da5765b8c23 ircd/m_invite.c
--- a/ircd/m_invite.c	Sat Jul 20 16:31:52 2013 +0200
+++ b/ircd/m_invite.c	Sat Jul 20 16:52:59 2013 +0200
@@ -170,8 +170,10 @@
     send_reply(sptr, ERR_ACCOUNTONLY, cli_name(acptr), feature_str(FEAT_URLREG));
     return 0;
   }
-  
-  if (IsCommonChansOnly(acptr) && !IsXtraOp(sptr) && !common_chan_count(acptr, sptr, 1)) {
+ 
+  if (((IsCommonChansOnly(acptr) && !IsXtraOp(sptr)) || (IsCommonChansOnlyRestricted(sptr) &&
+      !IsXtraOp(sptr) && !IsChannelService(acptr) && !IsService(cli_user(acptr)->server))) &&
+      !common_chan_count(acptr, sptr, 1)) {
     send_reply(sptr, ERR_COMMONCHANSONLY, cli_name(acptr));
     return 0;
   }
diff -r 5da5765b8c23 ircd/s_user.c
--- a/ircd/s_user.c	Sat Jul 20 16:31:52 2013 +0200
+++ b/ircd/s_user.c	Sat Jul 20 16:52:59 2013 +0200
@@ -553,7 +553,8 @@
   { FLAG_NOIDLE,      'I' },
   { FLAG_SETHOST,     'h' },
   { FLAG_PARANOID,    'P' },
-  { FLAG_COMMONCHANSONLY, 'q' }
+  { FLAG_COMMONCHANSONLY, 'q' },
+  { FLAG_COMMONCHANSONLY_RESTRICTED, 'Q' }
 };
 
 /** Length of #userModeList. */
@@ -1445,6 +1446,12 @@
         else
           ClearCommonChansOnly(sptr);
 	break;
+      case 'Q':
+        if (what == MODE_ADD)
+          SetCommonChansOnlyRestricted(sptr);
+        else
+          ClearCommonChansOnlyRestricted(sptr);
+        break;
       case 'r':
 	if ((what == MODE_ADD) && *(p + 1)) {
 	  account = *(++p);
@@ -1484,6 +1491,8 @@
       ClearNoIdle(sptr);
     if (!FlagHas(&setflags, FLAG_PARANOID) && !(IsOper(sptr) && HasPriv(sptr, PRIV_PARANOID)))
       ClearParanoid(sptr);
+    if (!FlagHas(&setflags, FLAG_COMMONCHANSONLY_RESTRICTED) && !IsOper(sptr))
+      ClearCommonChansOnlyRestricted(sptr);
 
     /* disallow ordinary users to do MODE -i when feature AUTOINVISIBLE is enabled */
     if (FlagHas(&setflags, FLAG_INVISIBLE) && !IsInvisible(sptr) &&          /* MODE -i */
@@ -1491,6 +1500,11 @@
         !FlagHas(&setflags, FLAG_OPER) && !FlagHas(&setflags, FLAG_LOCOP))   /* (was) not opered */
        SetInvisible(sptr);
 
+    /* disallow ordinary users to do MODE -Q */
+    if (FlagHas(&setflags, FLAG_COMMONCHANSONLY_RESTRICTED) && !IsCommonChansOnlyRestricted(sptr) && /* MODE -Q */
+        !FlagHas(&setflags, FLAG_OPER) && !FlagHas(&setflags, FLAG_LOCOP))                           /* (was) not opered */
+      SetCommonChansOnlyRestricted(sptr);
+
     /*
      * only send wallops to opers
      */
