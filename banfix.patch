# HG changeset patch
# Parent e4f53aeb83c3563ad0e75fc67c1f11fcb4d284b9
Fix ban interaction issues with +x and +h.

Backport from snircd 1.4.0 - http://hg.quakenet.org/snircd/rev/876732831347

diff -r e4f53aeb83c3 ircd/channel.c
--- a/ircd/channel.c	Sat Jun 29 16:18:12 2013 +0200
+++ b/ircd/channel.c	Sun Jun 30 13:06:22 2013 +0200
@@ -374,22 +374,28 @@
   char        tmphost[HOSTLEN + 1];
   char        iphost[SOCKIPLEN + 1];
   char       *hostmask;
-  char       *sr;
+  char       *sr = NULL;
+  char       *sa = NULL;
   struct Ban *found;
 
   /* Build nick!user and alternate host names. */
   ircd_snprintf(0, nu, sizeof(nu), "%s!%s",
                 cli_name(cptr), cli_user(cptr)->username);
   ircd_ntoa_r(iphost, &cli_ip(cptr));
-  if (!IsAccount(cptr))
-    sr = NULL;
-  else if (HasHiddenHost(cptr) || HasSetHost(cptr))
+
+  /* sr is real host if +h */
+  if (HasSetHost(cptr))
     sr = cli_user(cptr)->realhost;
-  else
-  {
-    ircd_snprintf(0, tmphost, HOSTLEN, "%s.%s",
-                  cli_user(cptr)->account, feature_str(FEAT_HIDDEN_HOST));
-    sr = tmphost;
+
+  /* if +x and not +h sa is real host, if -x or +h sa is the account host */
+  if (IsAccount(cptr)) {
+    if (HasHiddenHost(cptr) && !HasSetHost(cptr)) {
+      sa = cli_user(cptr)->realhost;
+    } else {
+      ircd_snprintf(0, tmphost, HOSTLEN, "%s.%s",
+                    cli_user(cptr)->account, feature_str(FEAT_HIDDEN_HOST));
+      sa = tmphost;
+    }
   }
 
   /* Walk through ban list. */
@@ -409,7 +415,8 @@
     if (!((banlist->flags & BAN_IPMASK)
          && ipmask_check(&cli_ip(cptr), &banlist->address, banlist->addrbits))
         && match(hostmask, cli_user(cptr)->host)
-        && !(sr && !match(hostmask, sr)))
+        && !(sr && !match(hostmask, sr))
+        && !(sa && !match(hostmask, sa)))
         continue;
     /* If an exception matches, no ban can match. */
     if (banlist->flags & BAN_EXCEPTION)
