# HG changeset patch
# Parent 2c04fd2c2f4cd8ce8659fcc63e6663db670d1ea4

Show host and pass for Connect blocks to a service.

diff -r 2c04fd2c2f4c ircd/s_err.c
--- a/ircd/s_err.c
+++ b/ircd/s_err.c
@@ -458,7 +458,7 @@
 /* 212 */
   { RPL_STATSCOMMANDS, "%s %u %u", "212" },
 /* 213 */
-  { RPL_STATSCLINE, "C %s * %d %d %s %s", "213" },
+  { RPL_STATSCLINE, "C %s %s %s %d %s %d %s %s", "213" },
 /* 214 */
   { 0 },
 /* 215 */
diff -r 2c04fd2c2f4c ircd/s_stats.c
--- a/ircd/s_stats.c
+++ b/ircd/s_stats.c
@@ -90,23 +90,49 @@
   struct ConfItem *tmp;
   unsigned short int port;
   int maximum;
-  char *host, *name, *username, *hub_limit;
+  char *host, *pass, *name, *username, *hub_limit, *origin;
+  int unmask = 0;
+
+  /*
+   * allow a channel service (+k) on an service server (+s)
+   * with a Uworld block on this server
+   * to see host and pass for Connect blocks - snircd
+   */
+  if (sd->sd_funcdata & CONF_SERVER) {                      /* report Connect blocks    */
+    if (IsUser(sptr) &&                                     /* a user                   */
+        IsChannelService(sptr) &&                           /* as channel service (+k)  */
+        IsService(cli_user(sptr)->server) &&                /* on a service server (+s) */
+        find_conf_byhost(cli_confs(cli_user(sptr)->server), /* with a Uworld block      */
+                          cli_name(cli_user(sptr)->server), CONF_UWORLD)) {
+      /* all shall be revealed, WALLOPS for accountability */
+      unmask = 1;
+      sendwallto_group_butone(&me, WALL_WALLOPS, 0,
+                              "Received STATS connect from %s on %s -- showing full details",
+                              cli_name(sptr), cli_name(cli_user(sptr)->server));
+    }
+  }
 
   for (tmp = GlobalConfList; tmp; tmp = tmp->next)
   {
     if ((tmp->status & sd->sd_funcdata))
     {
       host = BadPtr(tmp->host) ? null : tmp->host;
+      pass = BadPtr(tmp->passwd) ? null : tmp->passwd;
       name = BadPtr(tmp->name) ? null : tmp->name;
       username = BadPtr(tmp->username) ? null : tmp->username;
       hub_limit = BadPtr(tmp->hub_limit) ? null : tmp->hub_limit;
       maximum = tmp->maximum;
       port = tmp->address.port;
+      origin = BadPtr(tmp->origin_name) ? null : tmp->origin_name;
 
       if (tmp->status & CONF_UWORLD)
 	send_reply(sptr, RPL_STATSULINE, host);
       else if (tmp->status & CONF_SERVER)
-	send_reply(sptr, RPL_STATSCLINE, name, port, maximum, hub_limit, get_conf_class(tmp));
+	send_reply(sptr, RPL_STATSCLINE, name,
+	           unmask ? origin : "*",
+	           unmask ? host : "*", port,
+	           unmask ? pass : "*", maximum,
+	           hub_limit, get_conf_class(tmp));
       else if (tmp->status & CONF_CLIENT)
         send_reply(sptr, RPL_STATSILINE,
                    (tmp->username ? tmp->username : ""), (tmp->username ? "@" : ""),
